<?php

namespace ContainerXbKdRgj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_Listener_Security_LogoutService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'contao.listener.security.logout' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\Security\LogoutListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/EventListener/Security/LogoutListener.php';

        $a = ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService'));

        if (isset($container->privates['contao.listener.security.logout'])) {
            return $container->privates['contao.listener.security.logout'];
        }
        $b = ($container->services['security.helper'] ?? self::getSecurity_HelperService($container));

        if (isset($container->privates['contao.listener.security.logout'])) {
            return $container->privates['contao.listener.security.logout'];
        }

        return $container->privates['contao.listener.security.logout'] = new \Contao\CoreBundle\EventListener\Security\LogoutListener($a, ($container->services['contao.routing.scope_matcher'] ?? self::getContao_Routing_ScopeMatcherService($container)), $b, ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));
    }
}
