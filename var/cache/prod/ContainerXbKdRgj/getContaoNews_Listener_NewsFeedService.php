<?php

namespace ContainerXbKdRgj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContaoNews_Listener_NewsFeedService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'contao_news.listener.news_feed' shared service.
     *
     * @return \Contao\NewsBundle\EventListener\NewsFeedListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/contao/news-bundle/src/EventListener/NewsFeedListener.php';

        $a = ($container->services['contao.routing.content_url_generator'] ?? self::getContao_Routing_ContentUrlGeneratorService($container));

        if (isset($container->privates['contao_news.listener.news_feed'])) {
            return $container->privates['contao_news.listener.news_feed'];
        }
        $b = ($container->services['contao.insert_tag.parser'] ?? $container->load('getContao_InsertTag_ParserService'));

        if (isset($container->privates['contao_news.listener.news_feed'])) {
            return $container->privates['contao_news.listener.news_feed'];
        }
        $c = ($container->services['contao.cache.entity_tags'] ?? $container->load('getContao_Cache_EntityTagsService'));

        if (isset($container->privates['contao_news.listener.news_feed'])) {
            return $container->privates['contao_news.listener.news_feed'];
        }

        return $container->privates['contao_news.listener.news_feed'] = new \Contao\NewsBundle\EventListener\NewsFeedListener(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), ($container->services['contao.image.factory'] ?? $container->load('getContao_Image_FactoryService')), $a, $b, \dirname(__DIR__, 4), $c, 'UTF-8');
    }
}
