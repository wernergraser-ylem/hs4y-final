<?php

namespace ContainerXbKdRgj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_Listener_DoctrineSchemaService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'contao.listener.doctrine_schema' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\DoctrineSchemaListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/EventListener/DoctrineSchemaListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php';

        return $container->privates['contao.listener.doctrine_schema'] = new \Contao\CoreBundle\EventListener\DoctrineSchemaListener(new \Contao\CoreBundle\Doctrine\Schema\DcaSchemaProvider(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), ($container->services['doctrine'] ?? $container->load('getDoctrineService'))), ($container->privates['messenger.receiver_locator'] ?? $container->load('getMessenger_ReceiverLocatorService')));
    }
}
