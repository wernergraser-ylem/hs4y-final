<?php

namespace ContainerXbKdRgj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_Listener_PrettyErrorScreenService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'contao.listener.pretty_error_screen' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\PrettyErrorScreenListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/EventListener/PrettyErrorScreenListener.php';

        $a = ($container->services['twig'] ?? self::getTwigService($container));

        if (isset($container->privates['contao.listener.pretty_error_screen'])) {
            return $container->privates['contao.listener.pretty_error_screen'];
        }
        $b = ($container->services['security.helper'] ?? self::getSecurity_HelperService($container));

        if (isset($container->privates['contao.listener.pretty_error_screen'])) {
            return $container->privates['contao.listener.pretty_error_screen'];
        }
        $c = ($container->services['contao.routing.page_registry'] ?? self::getContao_Routing_PageRegistryService($container));

        if (isset($container->privates['contao.listener.pretty_error_screen'])) {
            return $container->privates['contao.listener.pretty_error_screen'];
        }
        $d = ($container->services['http_kernel'] ?? self::getHttpKernelService($container));

        if (isset($container->privates['contao.listener.pretty_error_screen'])) {
            return $container->privates['contao.listener.pretty_error_screen'];
        }

        return $container->privates['contao.listener.pretty_error_screen'] = new \Contao\CoreBundle\EventListener\PrettyErrorScreenListener(true, $a, ($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $b, $c, $d, ($container->services['contao.routing.page_finder'] ?? self::getContao_Routing_PageFinderService($container)));
    }
}
