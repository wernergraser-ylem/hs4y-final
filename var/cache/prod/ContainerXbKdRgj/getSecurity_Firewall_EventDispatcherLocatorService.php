<?php

namespace ContainerXbKdRgj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_EventDispatcherLocatorService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'security.firewall.event_dispatcher_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['security.firewall.event_dispatcher_locator'] = new \Symfony\Component\DependencyInjection\ServiceLocator(['contao_backend' => #[\Closure(name: 'security.event_dispatcher.contao_backend', class: 'Symfony\\Component\\EventDispatcher\\EventDispatcher')] fn () => ($container->privates['security.event_dispatcher.contao_backend'] ?? self::getSecurity_EventDispatcher_ContaoBackendService($container)), 'contao_frontend' => #[\Closure(name: 'security.event_dispatcher.contao_frontend', class: 'Symfony\\Component\\EventDispatcher\\EventDispatcher')] fn () => ($container->privates['security.event_dispatcher.contao_frontend'] ?? self::getSecurity_EventDispatcher_ContaoFrontendService($container))]);
    }
}
