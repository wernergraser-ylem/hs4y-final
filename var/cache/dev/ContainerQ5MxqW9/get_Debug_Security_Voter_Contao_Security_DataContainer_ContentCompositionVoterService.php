<?php

namespace ContainerQ5MxqW9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Debug_Security_Voter_Contao_Security_DataContainer_ContentCompositionVoterService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the private '.debug.security.voter.contao.security.data_container.content_composition_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authorization/Voter/TraceableVoter.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/Security/Voter/DataContainer/ContentCompositionVoter.php';

        $a = ($container->services['contao.routing.page_registry'] ?? self::getContao_Routing_PageRegistryService($container));

        if (isset($container->privates['.debug.security.voter.contao.security.data_container.content_composition_voter'])) {
            return $container->privates['.debug.security.voter.contao.security.data_container.content_composition_voter'];
        }
        $b = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['.debug.security.voter.contao.security.data_container.content_composition_voter'])) {
            return $container->privates['.debug.security.voter.contao.security.data_container.content_composition_voter'];
        }

        return $container->privates['.debug.security.voter.contao.security.data_container.content_composition_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter(new \Contao\CoreBundle\Security\Voter\DataContainer\ContentCompositionVoter(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $a), $b);
    }
}
