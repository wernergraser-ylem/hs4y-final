<?php

namespace ContainerQ5MxqW9;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_Security_AuthenticationSuccessHandlerService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the private 'contao.security.authentication_success_handler' shared service.
     *
     * @return \Contao\CoreBundle\Security\Authentication\AuthenticationSuccessHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticationSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/Security/Authentication/AuthenticationSuccessHandler.php';

        $a = ($container->services['contao.security.two_factor.trusted_device_manager'] ?? $container->load('getContao_Security_TwoFactor_TrustedDeviceManagerService'));

        if (isset($container->privates['contao.security.authentication_success_handler'])) {
            return $container->privates['contao.security.authentication_success_handler'];
        }
        $b = ($container->services['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container));

        if (isset($container->privates['contao.security.authentication_success_handler'])) {
            return $container->privates['contao.security.authentication_success_handler'];
        }
        $c = ($container->services['contao.routing.content_url_generator'] ?? self::getContao_Routing_ContentUrlGeneratorService($container));

        if (isset($container->privates['contao.security.authentication_success_handler'])) {
            return $container->privates['contao.security.authentication_success_handler'];
        }

        return $container->privates['contao.security.authentication_success_handler'] = new \Contao\CoreBundle\Security\Authentication\AuthenticationSuccessHandler(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $a, $b, $c, ($container->services['uri_signer'] ??= new \Symfony\Component\HttpFoundation\UriSigner($container->getEnv('APP_SECRET'))), ($container->services['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));
    }
}
