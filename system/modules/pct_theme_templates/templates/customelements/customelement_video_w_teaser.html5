<?php 
$GLOBALS['TL_CSS'][] = 'files/cto_layout/css/customelements/ce_video_w_teaser.css|static';

if ($this->field('height')->value()) {
	$GLOBALS['TL_HEAD'][] = "<style>.ce_video_w_teaser_" . $this->id  . "{height:" . $this->field('height')->value() . "}</style>";
}

if ($this->field('height_mob')->value()) {
	$GLOBALS['TL_HEAD'][] = "<style>@media only screen and (max-width: 767px) {.ce_video_w_teaser_" . $this->id  . "{height:" . $this->field('height_mob')->value() . "}}</style>";
}
?>

<div class="<?= $this->class; ?> ce_video_w_teaser_<?= $this->id; ?>" data-style="<?= $this->field('style')->value(); ?>" data-color="<?= $this->field('color')->value(); ?>" data-play-button="<?= $this->field('play_button')->value(); ?>" data-animation="<?= $this->field('animation')->value(); ?>"<?= $this->cssID; ?>>
	<div class="video_teaser">
		<?php if( $this->field('teaser_video')->value() !== null ): ?>
		<video class="teaser_video" id="teaservideo_<?= $this->id; ?>" muted autoplay playsinline loop poster="<?= $this->field('poster')->generate(); ?>">
			<source src="<?= \Contao\FilesModel::findByPk($this->field('teaser_video')->value())->path; ?>" type="video/mp4">
		</video>
		<?php endif; ?>
		<div class="teaser_image">
			<?= $this->field('bg_image')->html(); ?>
		</div>
		
		<div class="video_content">
			<i class="fa fa-play play-button-static"></i>
			<?php if($this->field('title')->value()): ?><div class="title"><?= $this->field('title')->html(); ?></div><?php endif; ?>
			<?php if($this->field('subtitle')->value()): ?><div class="subtitle"><?= $this->field('subtitle')->html(); ?></div><?php endif; ?>
			<?php if($this->field('duration')->value()): ?><div class="duration"><?= $this->field('duration')->value(); ?></div><?php endif; ?>
		</div>
	</div>
	
	<div style='display:none'>
	    <div id="inlinevideocontent_<?= $this->id; ?>" class="inlinevideocontent">
			<video id="video_<?= $this->id; ?>" class="video" muted autoplay playsinline loop poster="<?= $this->field('poster')->generate(); ?>">
				<source src="<?= \Contao\FilesModel::findByPk($this->field('video')->value())->path; ?>" type="video/mp4">
			</video>
		</div>
	</div>
	
	<div class="circle">
		<div class="circle_inside">
			<i class="fa fa-play"></i>
		</div>
	</div>
</div>

<!-- SEO-SCRIPT-START -->
<script>
jQuery(document).ready(function() {
    var videoContainer = jQuery(".ce_video_w_teaser_<?= $this->id; ?>");

    // Überprüfen, ob das Attribut data-animation auf "on" gesetzt ist
    if (videoContainer.attr("data-animation") === "on") {
        var videoTeaser = videoContainer.find(".video_teaser");
        var viewportHeight = jQuery(window).height();

        // Funktion, um die Breite basierend auf der Scrollposition anzupassen
        function adjustVideoWidth() {
            var teaserOffsetTop = videoTeaser.offset().top - jQuery(window).scrollTop();
            var teaserHeight = videoTeaser.outerHeight();
            var startWidth = 50; // Startbreite in Prozent
            var endWidth = 100; // Endbreite in Prozent
            var startExpandOffset = viewportHeight; // Beginnt sich zu vergrößern, wenn es in den Viewport kommt
            var topThirdViewport = viewportHeight / 5; // Oberes Drittel des Viewports

            if (teaserOffsetTop < startExpandOffset && teaserOffsetTop > topThirdViewport) {
                // Berechne, wie weit das Video in den Viewport eingedrungen ist
                var percentageInViewport = (startExpandOffset - teaserOffsetTop) / (startExpandOffset - topThirdViewport);

                // Interpolieren zwischen startWidth und endWidth
                var newWidth = startWidth + (percentageInViewport * (endWidth - startWidth));
                newWidth = Math.min(Math.max(newWidth, startWidth), endWidth); // Begrenzen zwischen 50% und 100%
                videoTeaser.css("width", newWidth + "%");
            } else if (teaserOffsetTop <= topThirdViewport) {
                // Wenn der Teaser das obere Drittel des Viewports erreicht hat
                videoTeaser.css("width", "100%");
            } else {
                // Wenn der Teaser außerhalb des Viewports ist, zurück zu startWidth
                videoTeaser.css("width", startWidth + "%");
            }
        }

        // Beim Laden der Seite prüfen, ob das Video im Viewport ist
        adjustVideoWidth();

        // Beim Scrollen die Breite anpassen
        jQuery(window).on("scroll", adjustVideoWidth);
    }
});

jQuery(document).ready(function() 
{
	// flying play button
	var circle = jQuery('.ce_video_w_teaser_<?= $this->id; ?>[data-play-button="play_button_flying"] .circle');
	var eventStarted = true;
	
	jQuery('.ce_video_w_teaser_<?= $this->id; ?>').on('mouseover mouseout',function(event)
	{
		var _this = jQuery(this);
		
		if( event.type == 'mouseover' )
		{
			var x = event.pageX - _this.offset().left;
			var y = event.pageY - _this.offset().top;
			circle.css({ transform: 'translate(' + x + 'px, ' + y + 'px)' });
		}
		
		if( event.type == 'mouseover' && eventStarted === false )
		{
			eventStarted = true;
			
			jQuery(document).on('mousemove',function(e)
			{
				var x = e.pageX - _this.offset().left;
				var y = e.pageY - _this.offset().top;
				circle.css({ transform: 'translate(' + x + 'px, ' + y + 'px)' });
			});	
		}
		else
		{
			jQuery(document).unbind('mousemove');
			eventStarted = false;
		}
	});
});
	
// set mouseover css class
jQuery(document).ready(function() 
{
    jQuery('.ce_video_w_teaser_<?= $this->id; ?>[data-play-button="play_button_flying"]').hover(
        function() {
            // Mouseover-Ereignis
            jQuery(this).addClass('mouseover');
        }, 
        function() {
            // Mouseout-Ereignis
            jQuery(this).removeClass('mouseover');
        }
    );
});

// lightbox and autoplay	
jQuery(document).ready(function()
	{
		var video =  document.getElementById("teaservideo_<?= $this->id; ?>");
		if( jQuery(video).attr('autoplay') )
		{
			video.muted = true;
		}
		jQuery(".ce_video_w_teaser_<?= $this->id; ?>").colorbox(
		{
			inline:true, width:"80%", height:"auto", maxWidth:"900px", href:"#inlinevideocontent_<?= $this->id; ?>",
			onOpen: function()
			{
				video.pause();
			},
			onClosed: function()
			{
				//video.pause();
				video.play();
				
			}
		});
	});
</script>
<!-- SEO-SCRIPT-STOP -->