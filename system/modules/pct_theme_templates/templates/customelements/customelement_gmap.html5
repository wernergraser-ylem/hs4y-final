<?php
$GLOBALS['TL_CSS'][] = 'files/cto_layout/css/customelements/ce_gmap.css|static';

global $objPage;
$objRoot = \Contao\PageModel::findByPk( $objPage->rootId );
?>

<!-- SEO-SCRIPT-START -->
<script>
// show privacy information if nessessary
jQuery(document).ready(function() 
{
	if( !PrivacyManager.hasAccess(2) )
	{
		jQuery('#privacy_info_<?= $this->id; ?>').removeClass('hidden');
	}
});

// listen to Eclipse.user_privacy Event
jQuery(document).on('Privacy.changed',function(event,params)
{
	if( PrivacyManager.hasAccess(2) )
	{
		jQuery('#privacy_info_<?= $this->id; ?>').fadeOut();
	}
});
</script>
<!-- SEO-SCRIPT-STOP -->

<?php
/**
 * To use google maps, please fill in your Google Maps API Key below
 */
$GoogleMapsApiKey = $objRoot->google_maps;


/**
 * DO NOT EDIT ANYTHING BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING!
 */
if(strlen($GoogleMapsApiKey) < 1)
{
	echo ($GLOBALS['TL_LANGUAGE'] == 'de' ? 'Google Maps API Schlüssel benötigt. Bitte tragen Sie den API Schlüssel im Template customelement_gmap.html5 ein' : 'Google Maps requires a valid API Key!');	
	return '';
}
?>

<?php
$GLOBALS['TL_HEAD'][] = 
'<script id="googleapis_maps"></script>
<script>
// Optin privacy setting token
var token = localStorage.getItem("user_privacy_settings");
if( token == undefined )
{
	token = "";
}
if(token.indexOf(2) >= 0)
{
  	document.getElementById("googleapis_maps").src = "https://maps.googleapis.com/maps/api/js?v=3.exp&key='.$GoogleMapsApiKey.'&loading=async&callback=initializeMap_'.$this->id.'";
}

// listen to Eclipse.user_privacy Event
jQuery(document).on("Eclipse.user_privacy",function(event,params)
{
	if(params.level.indexOf(2) >= 0)
	{
  		document.getElementById("googleapis_maps").src = "https://maps.googleapis.com/maps/api/js?v=3.exp&key='.$GoogleMapsApiKey.'&loading=async&callback=initializeMap_'.$this->id.'";
	}
});
</script>';
?>

<div class="<?php echo $this->class; ?> block"<?php echo $this->cssID; ?><?php if ($this->style): ?> style="<?php echo $this->style; ?>"<?php endif; ?>>
	<!-- indexer::stop -->
	<p id='privacy_info_<?= $this->id; ?>' class="privacy hidden">{{iflng::de}}Das Laden von Google Maps wurde nicht erlaubt. Bitte ändern Sie die <a class="privacy_optout_click">Datenschutz-Einstellungen</a>{{iflng}}{{iflng::en}}Google Maps has been restricted due to <a class="privacy_optout_click">privacy settings</a>{{iflng}}</p>
	<!-- indexer::continue -->
	<div class="ce_google_map_inside" id="gmap_<?php echo $this->id; ?>" style="height: <?php echo $this->field('height')->value(); ?>px;"></div>
</div>

<?php 
$arrLocations = array();
if( !empty($this->group('adresse')) )
{
	foreach($this->group('adresse') as $i => $fields)
	{
		$arrLocations[$i] = array
		(
			'country'	=> $this->field('country#'.$i)->value(),
			'street' 	=> $this->field('street#'.$i)->value(),
			'zipcode'	=> $this->field('zipcode#'.$i)->value(),
			'city'		=> $this->field('place#'.$i)->value(),
			'infotext'	=> \Contao\StringUtil::substrHtml($this->field('description#'.$i)->value(),strlen($this->field('description#'.$i)->value())),
			#'latitude'	=> '',
			#'longitude'=> '',
			'markerTitle' => 'Location: '.$i,
		);
		
		// marker icon
		if($this->field('icon#'.$i)->value())
		{
			$image = $this->field('icon#'.$i)->generate();
			$arrLocations[$i]['icon'] = \Contao\Environment::get('base').\Contao\StringUtil::substrHtml($image,strlen($image));
		}
	}
}
?>

<!-- SEO-SCRIPT-START -->
<script>
/**
 * Initialize the googlemap
 */
async function initializeMap_<?= $this->id; ?>() 
{
	var map;
	var center = {};
	var gray = [{featureType: "all", stylers: [{ saturation:-100},{gamma:0},{invert_lightness:0}]}];
	var ownstyles = [{featureType: "all", stylers: [
		<?php if($this->field('hue')->value()): ?>{ hue: "#<?php echo $this->field('hue')->value(); ?>"},<?php endif; ?>
		<?php if($this->field('weight')->value()): ?>{ weight: "<?php echo $this->field('weight')->value(); ?>"},<?php endif; ?>
		<?php if($this->field('saturation')->value()): ?>{saturation:<?php echo $this->field('saturation')->value(); ?>},<?php endif; ?>
		<?php if($this->field('gamma')->value()): ?>{gamma:<?php echo $this->field('gamma')->value(); ?>},<?php endif; ?>
		<?php if($this->field('lightness')->value()): ?>{lightness:<?php echo $this->field('lightness')->value(); ?>},<?php endif; ?>
		<?php if($this->field('invert_lightness')->value()): ?>{invert_lightness:1}<?php endif; ?>]}];
		
	var centers_lat = [];
	var centers_lng = [];
	
	var mapOptions =
	{
		mapId : 'gmap_<?= $this->id; ?>',
		zoom: <?php echo $this->field('zoom')->value(); ?>,
		scrollwheel: false,
		styles: <?php if($this->field('grayscale')->value()): ?>gray<?php else: ?>ownstyles<?php endif; ?>,
		mapTypeId: google.maps.MapTypeId.<?php if($this->field('map_type')->value()): ?><?php echo $this->field('map_type')->value(); ?><?php else: ?>ROADMAP<?php endif; ?>
	};
	
	var map = new google.maps.Map(document.getElementById('gmap_<?php echo $this->id; ?>'),mapOptions);
	
	// build locations array
	var locations = [];
	<?php foreach($arrLocations as $i => $location): ?>
		var location = {};
		<?php foreach($location as $k => $v): ?>
			location.<?php echo $k; ?> = '<?php echo $v; ?>';
		<?php endforeach; ?>
		locations.push(location);
	<?php endforeach; ?>
	var infowindow = new google.maps.InfoWindow();
	var markers = new Array();
	var { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker");
	var timeout = 0;
	
	// place markers
	for(var i = 0; i < locations.length; i++)
	{
		// stack timeouts to avoid query limit by Google
		timeout = i * 400;
		
		setTimeout(function(location) 
		{
			// marker options
			var options = 
			{
				map: map,
				title: location.markerTitle,
			}

			// custom pin
			if( location.icon !== undefined )
			{
				const img = document.createElement('img');
				img.setAttribute('class','marker_img');
				img.src = location.icon;
				options.content = new PinElement({glyph: img}).element;
			}
			
			if(location.latitude == undefined || location.longitude == undefined)
			{
				var geocoder = new google.maps.Geocoder;
				var address = location.street + ',' + location.zipcode + ',' + location.city + ',' + location.country;
				geocoder.geocode({'address': address}, function(results, status) 
				{
					if( results == null )
					{
						console.log(status + ' Adress: '+address);
						return true;
					}
					else
					{
						var pos = results[0].geometry.location;
						options.position = pos;
						
						// create marker
						marker = new google.maps.marker.AdvancedMarkerElement(options);

						marker.addListener('gmp-click', function(marker,i)
						{
							// go to marker position and zoom
							map.panTo(options.position);
							map.setZoom(10);
							infowindow.setContent('<div class="gmap_infotext">'+location.infotext+'</div>');
							infowindow.open(map, marker);
						});

						centers_lat.push(pos.lat());
	                	centers_lng.push(pos.lng());
					}
				});
			}
			// location has coordinates.
			else
			{
				var pos = new google.maps.LatLng(location.latitude, location.longitude);
				options.position = pos;
				
				// create marker
				marker = new google.maps.marker.AdvancedMarkerElement(options);
				
				marker.addListener('gmp-click', function(marker,i)
                {
	                // go to marker position and zoom
                    map.panTo(options.position);
                    map.setZoom(10);
                    infowindow.setContent('<div class="gmap_infotext">'+location.infotext+'</div>');
					infowindow.open(map, marker);
                });
                
                centers_lat.push(location.latitude);
                centers_lng.push(location.longitude);
            }
		},timeout, locations[i]);	
	}
	
	// find average coordinate as map center
	if(locations.length > 0)
	{
		setTimeout(function() 
		{
			var avg_lat = 0,avg_lng = 0;
			var c = centers_lat.length;
			for(var i = 0; i < c; i++)
			{
				avg_lat += Number( centers_lat[i] );
				avg_lng += Number( centers_lng[i] );
			}
			
			var center = 
			{
				lat: avg_lat/c,
				lng: avg_lng/c
			};

			map.setCenter( center );
		}, 1000 * i);
	}
	// fallback to default center
	else
	{
		center.lat = 51.1958685;
		center.lng = 10.4809570;

		map.setCenter( center );
	}
}
</script>
<!-- SEO-SCRIPT-STOP -->