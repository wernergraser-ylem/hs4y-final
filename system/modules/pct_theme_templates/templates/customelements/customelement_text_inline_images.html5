<?php
namespace Contao;	
	
$GLOBALS['TL_CSS'][] = 'files/cto_layout/css/customelements/ce_text_inline_images.css|static';
$GLOBALS['TL_JAVASCRIPT'][] = 'files/cto_layout/scripts/eclipsex/fx/core.js';
$GLOBALS['TL_JAVASCRIPT'][] = 'files/cto_layout/scripts/eclipsex/fx/waypoint/js/scripts.js';

$element = $this->field('markup')->value() ?? 'div';
if( strpos($element,'.') !== false )
{
    $element = 'div';
}

$arrImages = array();
$arrImageSizes = array();
$container = System::getContainer();
$projectDir = $container->getParameter('kernel.project_dir');
$staticUrl = $container->get('contao.assets.files_context')->getStaticUrl();		
foreach($this->group('content') as $i => $fields)
{
	$arrImages[$i] = $this->field('image#'.$i)->generate();
	
	$file = FilesModel::findByPk( $this->field('image#'.$i)->value() );
	if( $file !== null )
	{
		$tmp = StringUtil::deserialize( $file->meta );
		if( isset($tmp[ $GLOBALS['TL_LANGUAGE'] ]) )
		{
			$meta = $tmp[ $GLOBALS['TL_LANGUAGE'] ];
		}
		unset($tmp);
		
		$size = StringUtil::deserialize( $this->field('image#'.$i)->option('size') );
		// fallback image size
		if( empty( \array_filter($size) ) )
		{
			$size = array('35','35','crop');
		}
		$objPicture = $container->get('contao.image.preview_factory')->createPreviewPicture($projectDir . '/' . $file->path, $size);
		$arrPictures[ $i ] = $objPicture; 
		
		$sources = $objPicture->getSources($projectDir, $staticUrl);
		if( $objPicture !== null && !empty($sources) )
		{
			// look up prefered source image file (not media query)
			foreach($sources ?: array() as $data)
			{
				if( (isset($data['src']) && $data['src']) != $strImage && (!isset($data['media']) || strlen($data['media']) < 1) )
				{
					$arrImages[$i]= $data['src'];
				}
			}
		}
	}
}
?>

<<?= $element; ?> class="<?=  $this->class; ?> ce_text_inline_images_<?= $this->id; ?> <?= str_replace('.', '', $this->field('markup')->value()); ?>" data-align="<?= $this->field('align')->value(); ?>" data-color="<?= $this->field('color')->value(); ?>" data-speed="<?= $this->field('speed')->value(); ?>" data-style="<?= $this->field('style')->value(); ?>">
	<?php foreach($this->group('content') as $i => $fields): ?>
		<?php if($this->field('text#'.$i)->value()): ?>
		<span class="inline_text"><?= $this->field('text#'.$i)->value(); ?></span>
		<?php endif; ?>
		<?php if( isset($arrImages[$i]) && !empty($arrImages[$i]) ): ?>
		<?php 
		$arrImg = $arrPictures[$i]->getImg();
		?>
		<span class="inline_image inline_image_<?= $i; ?>" style="background-image: url(<?= $arrImages[$i]; ?>); min-width:<?= $arrImg['width'].'px'; ?>; background-size:<?= $arrImg['width'].'px'; ?>;">&nbsp;</span>
		<?php endif; ?>			
	<?php endforeach; ?>
</<?= $element; ?>>

<!-- SEO-SCRIPT-START -->
<script>
jQuery(document).ready(function() 
{
    var element = jQuery('.ce_text_inline_images_<?= $this->id; ?>');
    var waypoint = EX.fx.waypoint(element);
	jQuery(element).on('intersecting',function(e,params)
	{
        element.addClass('isInViewport');
    });
});
</script>  
<!-- SEO-SCRIPT-STOP -->